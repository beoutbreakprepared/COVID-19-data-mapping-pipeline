#!/usr/bin/python3

import datetime
import os
import subprocess
import sys

sys.path.append("../scripts")
import split

import data_util

if len(sys.argv) < 2:
  print("Please give me the target path as an argument. "
        "For instance:\n\n\t" + sys.argv[0] + " /var/www/html/covid-19\n")
  sys.exit(1)

src_path = os.path.dirname(os.path.realpath(__file__))
os.chdir(src_path)
target_path = sys.argv[1]
if not os.path.exists(target_path):
  print("Target '" + target_path + "' doesn't seem to exist.")
  sys.exit(1)

# Files and directories inside "app" that do not need to be copied over
# to the target. Please keep alphabetized.
EXCLUDED = [
  "__pycache__",
  "analytics.js",
  "clean",
  "data_util.py",
  "deploy",
  "full-data.json",
  "prerequisites.md",
  "run",
]

BACKUP_DIR_PREFIX = "backup_"

def has_analytics_code():
  return os.system("grep 'google-analytics.com' index.html") == 0

def insert_analytics_code():
  main_page = ""
  with open("analytics.js") as f:
    code = f.read()
    f.close()
  inserted = False
  with open("index.html") as f:
    for line in f:
      if not inserted and "<script" in line:
        main_page += code
        inserted = True
      main_page += line
    f.close()

  # Remove the file and re-write it
  os.remove("index.html")
  with open("index.html", "w") as f:
    f.write(main_page)
    f.close()

# Returns whether the backup operation succeeded
def backup_current_version(target_path):
  timestamp = datetime.datetime.now().strftime("%Y.%m.%d_%H.%M.%S")
  backup_dir = BACKUP_DIR_PREFIX + timestamp
  print("Backing up current version into '" + backup_dir + "'...")
  return os.system("cp -a " + target_path + " " + backup_dir) == 0

def deploy(target_path):
  print("Replacing target contents with new version...")
  # TODO: Use 'rsync' if it's available.
  os.system("rm -rf " + target_path + "/*")
  to_copy = [f for f in os.listdir(".") if
      f not in EXCLUDED and not f.startswith(BACKUP_DIR_PREFIX)]
  os.system("cp -a " + " ".join(to_copy) + " " + target_path + "/")

data_util.prepare_for_deployment()
if has_analytics_code():
  print("Analytics code is already present, skipping that step.")
else:
  insert_analytics_code()
  # TODO: Restore previous version of index.html automatically.
  print("You might want to remove the analytics code again "
        "after deployment.")

if not backup_current_version(target_path):
  print("I could not back up the current version, bailing out.")
  sys.exit(1)
deploy(target_path)

print("All done.")
